---
import {
  SiNextdotjs,
  SiTailwindcss,
  SiTypescript,
  SiPhp,
  SiJavascript,
  SiMysql,
  SiDiscord,
} from "react-icons/si";
import { BsLightningChargeFill } from "react-icons/bs";
import { HiOutlineCollection } from "react-icons/hi";
import { MdLaunch } from "react-icons/md";
import FadeIn from "../ui/FadeIn.astro";

const iconMap = {
  "Next.js": SiNextdotjs,
  "Tailwind CSS": SiTailwindcss,
  "TypeScript": SiTypescript,
  "PHP": SiPhp,
  "JavaScript": SiJavascript,
  "MySQL": SiMysql,
  "Performance": BsLightningChargeFill,
  "Discord API": SiDiscord,
};

const projects = [
  {
    title: "ventry.host v2",
    year: "2025",
    description: "Free file hosting revamped with a modern design and improved user experience.",
    icon: MdLaunch,
    tags: [
      { name: "Next.js", icon: iconMap["Next.js"] },
      { name: "Tailwind CSS", icon: iconMap["Tailwind CSS"] },
      { name: "TypeScript", icon: iconMap["TypeScript"] },
    ],
    link: "https://ventry.host",
  },
  {
    title: "ventry.host",
    year: "2023",
    description: "A free file hosting solution with thousands of daily visitors.",
    icon: MdLaunch,
    tags: [
      { name: "PHP", icon: iconMap["PHP"] },
      { name: "JavaScript", icon: iconMap["JavaScript"] },
      { name: "MySQL", icon: iconMap["MySQL"] },
    ],
  },
  {
    title: "ShareUpload",
    year: "2022",
    description: "High-performance file sharing platform with unlimited storage.",
    icon: HiOutlineCollection,
    tags: [
      { name: "PHP", icon: iconMap["PHP"] },
      { name: "MySQL", icon: iconMap["MySQL"] },
      { name: "Performance", icon: iconMap["Performance"] },
    ],
  },
  {
    title: "RestoreM",
    year: "2023",
    description: "Discord server backup and restoration service.",
    icon: SiDiscord,
    tags: [
      { name: "PHP", icon: iconMap["PHP"] },
      { name: "MySQL", icon: iconMap["MySQL"] },
      { name: "Discord API", icon: iconMap["Discord API"] },
    ],
  },
].sort((a, b) => parseInt(b.year) - parseInt(a.year));
---

<section id="work" class="py-24 sm:py-40 px-4 sm:px-8 relative">
  <div class="absolute inset-0 theme-bg-gradient opacity-30"></div>

  <div class="max-w-(--breakpoint-xl) mx-auto relative">
    <FadeIn>
      <div class="flex flex-col gap-3 mb-16 sm:mb-28">
        <span
          class="theme-text-40 uppercase tracking-wider text-sm sm:text-base font-medium font-['Instrument_Sans'] relative inline-flex items-center before:content-[''] before:absolute before:-left-8 before:w-6 before:h-px before:theme-border"
        >
          Portfolio
        </span>
        <div class="flex items-baseline gap-4">
          <h2
            class="font-['DM_Sans'] text-3xl sm:text-5xl lg:text-6xl font-semibold tracking-tight theme-primary"
          >
            Selected Work
          </h2>
          <div class="h-px grow theme-border opacity-60"></div>
        </div>
      </div>
    </FadeIn>

    <div class="grid gap-24 sm:gap-32">
      {
        projects.map((project, index) => (
          <FadeIn delay={index * 0.1}>
            <div class="group relative" data-project-card>
              {project.link && (
                <button 
                  class="project-link absolute inset-0 z-30 cursor-pointer w-full h-full" 
                  data-project-link
                  data-project-title={project.title}
                  data-project-url={project.link}
                >
                  <span class="sr-only">View {project.title}</span>
                </button>
              )}
              
              <div class="absolute top-0 left-0 right-0 flex items-center gap-4">
                <div class="font-['Instrument_Sans'] text-sm sm:text-base theme-text-40 uppercase tracking-wider font-medium py-2 pr-4 flex items-center">
                  {project.year}
                </div>
                <div class="h-px grow theme-border opacity-30" />
              </div>

              <div class="pt-16 sm:pt-20 grid grid-cols-1 lg:grid-cols-[1.5fr_1fr] gap-10 sm:gap-20">
                <div class="space-y-5 sm:space-y-7">
                  {project.link && (
                    <div class="flex items-center">
                      <span class="text-2xl sm:text-3xl theme-text-40 opacity-60 group-hover:opacity-90 transition-all duration-300">
                        <project.icon />
                      </span>
                    </div>
                  )}
                  <h3 class="font-['DM_Sans'] text-3xl sm:text-5xl font-semibold tracking-tight theme-primary group-hover:theme-text-90 transition-colors">
                    {project.title}
                  </h3>
                  <p class="font-['Instrument_Sans'] text-base sm:text-xl theme-text-70 leading-relaxed group-hover:theme-text-90 transition-colors max-w-xl">
                    {project.description}
                  </p>
                </div>

                <div class="space-y-8 sm:space-y-12">
                  <div class="space-y-5 sm:space-y-7">
                    <h4 class="font-['Instrument_Sans'] text-sm sm:text-base theme-text-40 uppercase tracking-wider font-medium flex items-center before:content-[''] before:w-6 before:h-px before:theme-border before:mr-3">
                      Technologies
                    </h4>
                    <div class="flex flex-wrap items-center gap-3 sm:gap-4 relative z-20 pointer-events-none">
                      {project.tags.map((tag) => (
                        <span class="flex items-center text-sm sm:text-base theme-text-70 font-['Instrument_Sans'] tracking-tight font-medium py-2 px-5 group-hover:theme-text-90 transition-all duration-300 theme-bg-05 rounded-full shadow-sm border border-transparent group-hover:theme-border">
                          <span class="mr-2 flex items-center">
                            <tag.icon className="text-lg" />
                          </span>
                          {tag.name}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
              </div>

              <div class="absolute -inset-x-8 sm:-inset-x-12 -inset-y-8 sm:-inset-y-12 rounded-3xl sm:rounded-[2rem] border border-transparent hover:theme-border group-hover:bg-white/[0.02] transition-all duration-300 shadow-sm group-hover:shadow-lg" />
              
              {project.link && (
                <div class="absolute bottom-5 right-5 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0 z-20 pointer-events-none">
                  <span class="flex items-center theme-text-90 font-['Instrument_Sans'] text-sm bg-white/10 px-4 py-2 rounded-full shadow-md backdrop-blur-sm">
                    <MdLaunch className="mr-2" /> View Project
                  </span>
                </div>
              )}
            </div>
          </FadeIn>
        ))
      }
    </div>
  </div>
</section>

<div id="redirect-modal" class="fixed inset-0 z-50 flex items-center justify-center opacity-0 pointer-events-none transition-all duration-300 ease-out">
  <div class="absolute inset-0 bg-black bg-opacity-0 backdrop-blur-[0px] transition-all duration-300 ease-out" id="modal-overlay"></div>
  <div class="relative bg-neutral-900 border theme-border rounded-2xl w-full max-w-md p-6 sm:p-8 shadow-xl transform transition-all duration-300 ease-out scale-95 opacity-0">
    <div class="text-center">
      <span class="inline-block text-4xl theme-text-40 mb-4">
        <MdLaunch />
      </span>
      
      <h3 class="font-['DM_Sans'] text-2xl sm:text-3xl font-semibold tracking-tight theme-primary mb-2">
        External Link
      </h3>
      
      <p class="font-['Instrument_Sans'] theme-text-70 mb-6">
        You are being redirected to <span id="redirect-url" class="theme-primary font-medium"></span>
      </p>
      
      <div class="flex flex-col-reverse sm:flex-row gap-3 sm:gap-4 justify-center">
        <button
          id="cancel-redirect"
          class="theme-primary-gradient text-white py-3 px-6 rounded-xl font-medium hover:opacity-90 transition-all cursor-pointer"
        >
          Cancel
        </button>
        <button
          id="confirm-redirect"
          class="theme-bg-05 theme-text-90 py-3 px-6 rounded-xl font-medium border border-transparent hover:theme-border transition-all cursor-pointer"
        >
          Continue to Site
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('redirect-modal');
    const modalOverlay = document.getElementById('modal-overlay');
    const modalContent = modal?.querySelector('.max-w-md');
    const redirectUrlEl = document.getElementById('redirect-url');
    let currentUrl = '';
    
    function showModal(url) {
      currentUrl = url;
      if (redirectUrlEl) redirectUrlEl.textContent = new URL(url).hostname;
      
      if (modal) {
        modal.classList.remove('pointer-events-none');
        setTimeout(() => {
          modal.classList.add('opacity-100');
          modalOverlay?.classList.add('bg-opacity-60', 'backdrop-blur-sm');
          modalContent?.classList.remove('scale-95', 'opacity-0');
          modalContent?.classList.add('scale-100', 'opacity-100');
        }, 10);
        document.body.style.overflow = 'hidden';
      }
    }
    
    function hideModal() {
      if (modal) {
        modal.classList.remove('opacity-100');
        modalOverlay?.classList.remove('bg-opacity-60', 'backdrop-blur-sm');
        modalContent?.classList.remove('scale-100', 'opacity-100');
        modalContent?.classList.add('scale-95', 'opacity-0');
        
        setTimeout(() => {
          modal.classList.add('pointer-events-none');
          document.body.style.overflow = '';
        }, 300);
      }
    }
    
    document.querySelectorAll('[data-project-link]').forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const url = link.getAttribute('data-project-url');
        if (url) showModal(url);
      });
    });
    
    document.getElementById('cancel-redirect')?.addEventListener('click', hideModal);
    modalOverlay?.addEventListener('click', hideModal);
    document.getElementById('confirm-redirect')?.addEventListener('click', () => {
      if (currentUrl) window.open(currentUrl, '_blank');
      hideModal();
    });
    
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') hideModal();
    });
  });
</script>

